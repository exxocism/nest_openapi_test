#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

# Current Version
PRECOMMIT_VERSION=1
PRECOMMIT_PATH="$(git rev-parse --git-dir)/../postman/pre-commit"
HOOK_PATH="$(git rev-parse --git-dir)/hooks/pre-commit"

# Script Version Check
if [ "$1" = "check-version" ]; then
  echo $PRECOMMIT_VERSION
  exit $PRECOMMIT_VERSION
fi

echo "Checking for new version of hook... "
NEW_VERSION=$($PRECOMMIT_PATH check-version)

if [ $NEW_VERSION -gt $PRECOMMIT_VERSION ]; then
  echo "New version of hook found. Updating..."
  cp -f $PRECOMMIT_PATH $HOOK_PATH
  chmod +x $HOOK_PATH
  echo "Done. Please commit again."
  exit 1
fi

# FYI: after this point, the hook no longer runs, so you need to do it on openapi.ts
echo "Generating OpenAPI Spec before commit..."
exec npm run openapi >/dev/null

exit 0
